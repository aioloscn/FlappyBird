{"version":3,"sources":["../../../js/base/resourceLoader.js"],"names":["resourceLoader","map","Map","resources","key","value","image","Image","src","set","callback","loadedCount","values","onload","size"],"mappings":";;;;;;;;;qjBAAA;;;AACA;;;;IAEaA,c,WAAAA,c;AAET,8BAAc;AAAA;;AACV,aAAKC,GAAL,GAAW,IAAIC,GAAJ,CAAQC,oBAAR,CAAX;AADU;AAAA;AAAA;;AAAA;AAEV,iCAAwB,KAAKF,GAA7B,8HAAkC;AAAA;;AAAA;;AAAA,oBAAzBG,GAAyB;AAAA,oBAApBC,KAAoB;;AAC9B,oBAAMC,QAAQ,IAAIC,KAAJ,EAAd;AACAD,sBAAME,GAAN,GAAYH,KAAZ;AACA,qBAAKJ,GAAL,CAASQ,GAAT,CAAaL,GAAb,EAAkBE,KAAlB;AACH;AANS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOb;;;;iCAEQI,Q,EAAU;AAAA;;AACf,gBAAIC,cAAc,CAAlB;AADe;AAAA;AAAA;;AAAA;AAEf,sCAAkB,KAAKV,GAAL,CAASW,MAAT,EAAlB,mIAAqC;AAAA,wBAA5BP,KAA4B;;AACjCA,0BAAMQ,MAAN,GAAe,YAAM;AACjBF;AACA,4BAAIA,eAAe,MAAKV,GAAL,CAASa,IAA5B,EAAkC;AAC9BJ,qCAAS,MAAKT,GAAd;AACH;AACJ,qBALD;AAMH;AATc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUlB;;;iCAEe;AACZ,mBAAO,IAAID,cAAJ,EAAP;AACH","file":"resourceLoader.js","sourcesContent":["// 资源文件加载器， 确保canvas在图片资源加载完成后才进行渲染\r\nimport {resources} from \"./resources.js\";\r\n\r\nexport class resourceLoader {\r\n\r\n    constructor() {\r\n        this.map = new Map(resources);\r\n        for (let[key, value] of this.map) {\r\n            const image = new Image();\r\n            image.src = value;\r\n            this.map.set(key, image);\r\n        }\r\n    }\r\n\r\n    onLoaded(callback) {\r\n        let loadedCount = 0;\r\n        for (let value of this.map.values()) {\r\n            value.onload = () => {\r\n                loadedCount++;\r\n                if (loadedCount >= this.map.size) {\r\n                    callback(this.map);\r\n                }\r\n            };\r\n        }\r\n    }\r\n\r\n    static create() {\r\n        return new resourceLoader();\r\n    }\r\n}"]}