{"version":3,"sources":["../../../js/base/sprite.js"],"names":["sprite","img","srcX","srcY","srcW","srcH","x","y","width","height","dataStore","getInstance","ctx","drawImage","key","res","get"],"mappings":";;;;;;;qjBAAA;;;AACA;;;;IAEaA,M,WAAAA,M;AACT,sBAAqG;AAAA,YAAzFC,GAAyF,uEAAnF,IAAmF;AAAA,YAA7EC,IAA6E,uEAAtE,CAAsE;AAAA,YAAnEC,IAAmE,uEAA5D,CAA4D;AAAA,YAAzDC,IAAyD,uEAAlD,CAAkD;AAAA,YAA/CC,IAA+C,uEAAxC,CAAwC;AAAA,YAArCC,CAAqC,uEAAjC,CAAiC;AAAA,YAA9BC,CAA8B,uEAA1B,CAA0B;AAAA,YAAvBC,KAAuB,uEAAf,CAAe;AAAA,YAAZC,MAAY,uEAAH,CAAG;;AAAA;;AACjG,aAAKC,SAAL,GAAiBA,qBAAUC,WAAV,EAAjB;AACA,aAAKC,GAAL,GAAW,KAAKF,SAAL,CAAeE,GAA1B;AACA,aAAKX,GAAL,GAAWA,GAAX;AACA,aAAKC,IAAL,GAAYA,IAAZ;AACA,aAAKC,IAAL,GAAYA,IAAZ;AACA,aAAKC,IAAL,GAAYA,IAAZ;AACA,aAAKC,IAAL,GAAYA,IAAZ;AACA,aAAKC,CAAL,GAASA,CAAT;AACA,aAAKC,CAAL,GAASA,CAAT;AACA,aAAKC,KAAL,GAAaA,KAAb;AACA,aAAKC,MAAL,GAAcA,MAAd;AACH;;;;;;AAMD;;;;;;;;;;;+BAmB2B;AAAA,gBARtBR,GAQsB,uEARhB,KAAKA,GAQW;AAAA,gBAPtBC,IAOsB,uEAPf,KAAKA,IAOU;AAAA,gBANtBC,IAMsB,uEANf,KAAKA,IAMU;AAAA,gBALtBC,IAKsB,uEALf,KAAKA,IAKU;AAAA,gBAJtBC,IAIsB,uEAJf,KAAKA,IAIU;AAAA,gBAHtBC,CAGsB,uEAHlB,KAAKA,CAGa;AAAA,gBAFtBC,CAEsB,uEAFlB,KAAKA,CAEa;AAAA,gBADtBC,KACsB,uEADd,KAAKA,KACS;AAAA,gBAAtBC,MAAsB,uEAAb,KAAKA,MAAQ;;AACvB,iBAAKG,GAAL,CAASC,SAAT,CACIZ,GADJ,EAEIC,IAFJ,EAGIC,IAHJ,EAIIC,IAJJ,EAKIC,IALJ,EAMIC,CANJ,EAOIC,CAPJ,EAQIC,KARJ,EASIC,MATJ;AAWH;;;iCAnCeK,G,EAAK;AACjB,mBAAOJ,qBAAUC,WAAV,GAAwBI,GAAxB,CAA4BC,GAA5B,CAAgCF,GAAhC,CAAP;AACH","file":"sprite.js","sourcesContent":["// 精灵的基类，负责初始化精灵加载的资源和大小以及位置\r\nimport {dataStore} from \"./dataStore.js\";\r\n\r\nexport class sprite {\r\n    constructor(img = null, srcX = 0, srcY = 0, srcW = 0, srcH = 0, x = 0, y = 0, width = 0, height = 0) {\r\n        this.dataStore = dataStore.getInstance();\r\n        this.ctx = this.dataStore.ctx;\r\n        this.img = img;\r\n        this.srcX = srcX;\r\n        this.srcY = srcY;\r\n        this.srcW = srcW;\r\n        this.srcH = srcH;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = width;\r\n        this.height = height;\r\n    }\r\n\r\n    static getImage(key) {\r\n        return dataStore.getInstance().res.get(key);\r\n    }\r\n\r\n    /**\r\n     * img  传入Image对象\r\n     * srcX 要裁剪的起始X坐标\r\n     * srcY 要裁剪的起始Y坐标\r\n     * srcW 裁剪的宽度\r\n     * srcH 裁剪的高度\r\n     * x    放置的x坐标\r\n     * y    放置的y坐标\r\n     * width    要使用的宽度\r\n     * height   要使用的高度\r\n     */\r\n    draw(img = this.img,\r\n         srcX = this.srcX,\r\n         srcY = this.srcY,\r\n         srcW = this.srcW,\r\n         srcH = this.srcH,\r\n         x = this.x,\r\n         y = this.y,\r\n         width = this.width,\r\n         height = this.height) {\r\n        this.ctx.drawImage(\r\n            img,\r\n            srcX,\r\n            srcY,\r\n            srcW,\r\n            srcH,\r\n            x,\r\n            y,\r\n            width,\r\n            height\r\n        );\r\n    }\r\n}"]}